"use client";

import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import React, { useState } from 'react'

interface Workout {
  id?: number; // Optional for new records (auto-generated by Prisma)
  exercise: string;
  sets: number;
  reps: number;
  weight: number;
  calories: number;
  duration:string;
  userId: number; // Required for relational data
}
const Progress = () => {
  const [formData, setFormData] = useState<Workout>({
    exercise: "",
    sets: 0,
    reps: 0,
    weight: 0,
    calories: 0,
    userId: 1,
    duration:""
  })


  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: name === "exercise" ? value : Number(value), // Convert to number except for exercise
    });
    
  };

  

  const handleSubmit = async (e:React.FormEvent) => {
    e.preventDefault();
  }

  return (
    <div className="p-8">
      <div className="mb-6 flex justify-between items-center">
        <h1 className="text-2xl font-semibold">My Progress</h1>
      </div>
      <div className="bg-white h-screen rounded-lg shadow-sm">
        <div className="p-6">
          <form onSubmit={handleSubmit} className='space-y-4'>
            <div className='space-y-4'>
              <Label className="block text-sm font-medium text-gray-700">Exercise</Label>
              <Input
                type="text"
                name="exercise"
                placeholder="Exercise name"
                value={formData.exercise}
                onChange={handleInputChange}
                className="mt-1 p-2 w-full border rounded-md"
                required
              />
            </div>
            <div className='space-y-4'>
              <Label className="block text-sm font-medium text-gray-700">Sets</Label>
              <input
                type="number"
                name="sets"
                placeholder="Sets"
                value={formData.sets}
                onChange={handleInputChange}
                className="mt-1 p-2 w-full border rounded-md"
              />
            </div>
            <div className='space-y-4'>
              <Label className="block text-sm font-medium text-gray-700">Reps</Label>
              <Input
                type="number"
                name="reps"
                placeholder="Reps"
                value={formData.reps}
                onChange={handleInputChange}
                className="mt-1 p-2 w-full border rounded-md"
              />
            </div>
            <div className='space-y-4'>
              <Label className="block text-sm font-medium text-gray-700">Weight (kg)</Label>
              <Input
                type="number"
                name="weight"
                placeholder="Weight"
                value={formData.weight}
                onChange={handleInputChange}
                className="mt-1 p-2 w-full border rounded-md"
              />
            </div>
            <div className='space-y-4'>
              <Label className="block text-sm font-medium text-gray-700">Duration (minutes)</Label>
              <Input
                type="number"
                name="duration"
                placeholder="Duration"
                value={formData.duration}
                onChange={handleInputChange}
                className="mt-1 p-2 w-full border rounded-md"
                required
              />
            </div>
            <div className='space-y-4'>
              <Label className="block text-sm font-medium text-gray-700">Calories Burned</Label>
              <Input
                type="number"
                name="calories"
                placeholder="Calories"
                value={formData.calories}
                onChange={handleInputChange}
                className="mt-1 p-2 w-full border rounded-md bg-gray-100"
              />
            </div>
            <button
              type="submit"
              className="w-full p-2 mt-4 bg-blue-500 text-white rounded-md hover:bg-blue-600"
            >
              Log Workout
            </button>
          </form>

        </div>
      </div>
    </div>
  )
}

export default Progress